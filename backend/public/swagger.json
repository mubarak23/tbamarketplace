{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ISellerNftResponse": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"isClosed": {
						"type": "boolean"
					},
					"sellerAddress": {
						"type": "string"
					},
					"bidId": {
						"type": "number",
						"format": "double"
					},
					"nftAddress": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"uuid",
					"isClosed",
					"sellerAddress",
					"bidId",
					"nftAddress",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedList_ISellerNftResponse-Array_": {
				"properties": {
					"pageNumber": {
						"type": "number",
						"format": "double"
					},
					"total": {
						"type": "number",
						"format": "double"
					},
					"pageSize": {
						"type": "number",
						"format": "double"
					},
					"dataset": {
						"items": {
							"items": {
								"$ref": "#/components/schemas/ISellerNftResponse"
							},
							"type": "array"
						},
						"type": "array"
					}
				},
				"required": [
					"pageNumber",
					"total",
					"pageSize",
					"dataset"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DetailedError": {
				"properties": {
					"message": {
						"type": "string"
					},
					"standardizedErrorCode": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"standardizedErrorCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_IPaginatedList_ISellerNftResponse-Array__": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/IPaginatedList_ISellerNftResponse-Array_"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SortOrder": {
				"enum": [
					"ASC",
					"DESC"
				],
				"type": "string"
			},
			"IServerResponse_ISellerNftResponse_": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ISellerNftResponse"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISubmitSellerNftDto": {
				"properties": {
					"sellerAddress": {
						"type": "string"
					},
					"bidId": {
						"type": "number",
						"format": "double"
					},
					"nftAddress": {
						"type": "string"
					}
				},
				"required": [
					"sellerAddress",
					"bidId",
					"nftAddress"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_void_": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "x-access-token",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "tba-market-backend",
		"version": "1.0.0",
		"description": "TBA Marketplace Service Backend",
		"contact": {
			"name": "Mubarak Aminu"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/sellernft/all": {
			"get": {
				"operationId": "HandleGetAllSellerNfts",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_IPaginatedList_ISellerNftResponse-Array__"
								}
							}
						}
					}
				},
				"tags": [
					"Seller NFT Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "pageSize",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SortOrder"
						}
					}
				]
			}
		},
		"/api/sellernft/{sellernftuuid}": {
			"get": {
				"operationId": "HandleSingleSellerNft",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_ISellerNftResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"Seller NFT Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sellernftuuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/sellernft/new": {
			"post": {
				"operationId": "HandleNewSeller",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_ISellerNftResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"Seller NFT Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISubmitSellerNftDto"
							}
						}
					}
				}
			}
		},
		"/api/sellernft/markasclosed/{sellernftuuid}": {
			"put": {
				"operationId": "MarkSellerNftAsClosed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_void_"
								}
							}
						}
					}
				},
				"tags": [
					"Seller NFT Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sellernftuuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}